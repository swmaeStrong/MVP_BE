plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.swmStrong'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	runtimeOnly 'com.mysql:mysql-connector-j'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	implementation 'me.paulschwarz:spring-dotenv:3.0.0'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('updateSubmodule', Exec) {
	description = '서브 모듈을 최신화 합니다.'
	workingDir = file('submodule')
	commandLine 'git', 'pull', '--ff-only'
}

tasks.register('copyYML', Copy) {
	description = '서브 모듈의 yml 파일을 resources 디렉토리로 복사합니다.'
	dependsOn tasks.named('updateSubmodule')

	from(file('submodule')) {
		include '*.yml'
	}
	into(file('src/main/resources'))
}

tasks.named('processResources') {
	dependsOn tasks.named('copyYML')
}